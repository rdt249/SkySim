/** 2206627063 **/
/***********************************************************************************
 ** Copyright (c) 2003 Cadence Design Systems, Inc. All rights reserved.          **
 **                                                                               **
 ** This work may not be copied, modified, re-published, uploaded, executed, or   **
 ** distributed in any way, in any medium, whether in whole or in part, without   **
 ** prior written permission from Cadence Design Systems, Inc.                    **
 **                                                                               **
 ** This file is automatically generated and will be overwritten. The interfaces  **
 ** used within this generated code are subject to change without notice.         **
 ***********************************************************************************/
#ifndef DZCAP_VA_INST_STATIC_H
#define DZCAP_VA_INST_STATIC_H

#include <math.h>
#include <stdlib.h>

#include "ahdlcmi.h"


#define _I_Dynamic_p2_sx_1264	(*((double *) &instData [1264]))	/* VT_BRANCH : Size = 8 bytes. */
#define _I_Static_p2_sx_1256	(*((double *) &instData [1256]))	/* VT_BRANCH : Size = 8 bytes. */
#define _I_Dynamic_w1_p_1248	(*((double *) &instData [1248]))	/* VT_BRANCH : Size = 8 bytes. */
#define _I_Static_w1_p_1240	(*((double *) &instData [1240]))	/* VT_BRANCH : Size = 8 bytes. */
#define _I_Dynamic_p2_p3_1232	(*((double *) &instData [1232]))	/* VT_BRANCH : Size = 8 bytes. */
#define _I_Static_p2_p3_1224	(*((double *) &instData [1224]))	/* VT_BRANCH : Size = 8 bytes. */
#define _I_Dynamic_p1_p2_1216	(*((double *) &instData [1216]))	/* VT_BRANCH : Size = 8 bytes. */
#define _I_Static_p1_p2_1208	(*((double *) &instData [1208]))	/* VT_BRANCH : Size = 8 bytes. */
#define _I_Dynamic_w1_p1_1200	(*((double *) &instData [1200]))	/* VT_BRANCH : Size = 8 bytes. */
#define _I_Static_w1_p1_1192	(*((double *) &instData [1192]))	/* VT_BRANCH : Size = 8 bytes. */
#define _I_Dynamic_n3_p3_1184	(*((double *) &instData [1184]))	/* VT_BRANCH : Size = 8 bytes. */
#define _I_Static_n3_p3_1176	(*((double *) &instData [1176]))	/* VT_BRANCH : Size = 8 bytes. */
#define _I_Dynamic_n2_p2_1168	(*((double *) &instData [1168]))	/* VT_BRANCH : Size = 8 bytes. */
#define _I_Static_n2_p2_1160	(*((double *) &instData [1160]))	/* VT_BRANCH : Size = 8 bytes. */
#define _I_Dynamic_n1_p1_1152	(*((double *) &instData [1152]))	/* VT_BRANCH : Size = 8 bytes. */
#define _I_Static_n1_p1_1144	(*((double *) &instData [1144]))	/* VT_BRANCH : Size = 8 bytes. */
#define _I_Dynamic_n2_n3_1136	(*((double *) &instData [1136]))	/* VT_BRANCH : Size = 8 bytes. */
#define _I_Static_n2_n3_1128	(*((double *) &instData [1128]))	/* VT_BRANCH : Size = 8 bytes. */
#define _I_Dynamic_n1_n2_1120	(*((double *) &instData [1120]))	/* VT_BRANCH : Size = 8 bytes. */
#define _I_Static_n1_n2_1112	(*((double *) &instData [1112]))	/* VT_BRANCH : Size = 8 bytes. */
#define _I_Dynamic_n_n1_1104	(*((double *) &instData [1104]))	/* VT_BRANCH : Size = 8 bytes. */
#define _I_Static_n_n1_1096	(*((double *) &instData [1096]))	/* VT_BRANCH : Size = 8 bytes. */
#define _Static_d_by_dv_diode_1088	(*((double *) &instData [1088]))	/* Branch Load Group : Size = 8 bytes. */
#define _Static_d_by_dv_Rw_1072	(*((double *) &instData [1072]))	/* Branch Load Group : Size = 8 bytes. */
#define _Static_d_by_dv_Rp3_1056	(*((double *) &instData [1056]))	/* Branch Load Group : Size = 8 bytes. */
#define _Static_d_by_dv_Rp2_1040	(*((double *) &instData [1040]))	/* Branch Load Group : Size = 8 bytes. */
#define _Static_d_by_dv_Rp1_1024	(*((double *) &instData [1024]))	/* Branch Load Group : Size = 8 bytes. */
#define _Dynamic_d_by_dv_C3_1008	(*((double *) &instData [1008]))	/* Branch Load Group : Size = 8 bytes. */
#define _Dynamic_d_by_dv_C2_992	(*((double *) &instData [992]))	/* Branch Load Group : Size = 8 bytes. */
#define _Dynamic_d_by_dv_C1_976	(*((double *) &instData [976]))	/* Branch Load Group : Size = 8 bytes. */
#define _Static_d_by_dv_Rn3_960	(*((double *) &instData [960]))	/* Branch Load Group : Size = 8 bytes. */
#define _Static_d_by_dv_Rn2_944	(*((double *) &instData [944]))	/* Branch Load Group : Size = 8 bytes. */
#define _Static_d_by_dv_Rn1_928	(*((double *) &instData [928]))	/* Branch Load Group : Size = 8 bytes. */
#define _w1_920	(*((long *) &instData [920]))	/* VT_NODE : Size = 4 bytes. */
#define _p3_916	(*((long *) &instData [916]))	/* VT_NODE : Size = 4 bytes. */
#define _p2_912	(*((long *) &instData [912]))	/* VT_NODE : Size = 4 bytes. */
#define _p1_908	(*((long *) &instData [908]))	/* VT_NODE : Size = 4 bytes. */
#define _n3_904	(*((long *) &instData [904]))	/* VT_NODE : Size = 4 bytes. */
#define _n2_900	(*((long *) &instData [900]))	/* VT_NODE : Size = 4 bytes. */
#define _n1_896	(*((long *) &instData [896]))	/* VT_NODE : Size = 4 bytes. */
#define _area_688	(*((double *) &instData [688]))	/* VT_REAL : Size = 8 bytes. */
#define _nTrench_648	(*((double *) &instData [648]))	/* VT_REAL : Size = 8 bytes. */
#define _Rn_608	(*((double *) &instData [608]))	/* VT_REAL : Size = 8 bytes. */
#define _Rp_568	(*((double *) &instData [568]))	/* VT_REAL : Size = 8 bytes. */
#define _Rwell_528	(*((double *) &instData [528]))	/* VT_REAL : Size = 8 bytes. */
#define _xti3_504	(*((double *) &instData [504]))	/* VT_REAL : Size = 8 bytes. */
#define _n_th_480	(*((double *) &instData [480]))	/* VT_REAL : Size = 8 bytes. */
#define _js3_456	(*((double *) &instData [456]))	/* VT_REAL : Size = 8 bytes. */
#define _nDummy_432	(*((double *) &instData [432]))	/* VT_REAL : Size = 8 bytes. */
#define _Rw_spec_408	(*((double *) &instData [408]))	/* VT_REAL : Size = 8 bytes. */
#define _Rp_spec_384	(*((double *) &instData [384]))	/* VT_REAL : Size = 8 bytes. */
#define _Rn_spec_360	(*((double *) &instData [360]))	/* VT_REAL : Size = 8 bytes. */
#define _C_spec_336	(*((double *) &instData [336]))	/* VT_REAL : Size = 8 bytes. */
#define _nSegments_324	(*((long *) &instData [324]))	/* VT_INT : Size = 4 bytes. */
#define _dz_tox_f_304	(*((double *) &instData [304]))	/* VT_REAL : Size = 8 bytes. */
#define _dz_tox_n_280	(*((double *) &instData [280]))	/* VT_REAL : Size = 8 bytes. */
#define _tr_d_256	(*((double *) &instData [256]))	/* VT_REAL : Size = 8 bytes. */
#define _tr_sp_232	(*((double *) &instData [232]))	/* VT_REAL : Size = 8 bytes. */
#define _tr_w_208	(*((double *) &instData [208]))	/* VT_REAL : Size = 8 bytes. */
#define _tr_l_184	(*((double *) &instData [184]))	/* VT_REAL : Size = 8 bytes. */
#define _strap_w_160	(*((double *) &instData [160]))	/* VT_REAL : Size = 8 bytes. */
#define _strap_l_136	(*((double *) &instData [136]))	/* VT_REAL : Size = 8 bytes. */
#define _w_112	(*((double *) &instData [112]))	/* VT_REAL : Size = 8 bytes. */
#define _l_88	(*((double *) &instData [88]))	/* VT_REAL : Size = 8 bytes. */
#define _ntotal_80	(*((long *) &instData [80]))	/* VT_INT : Size = 4 bytes. */
#define _ny_72	(*((long *) &instData [72]))	/* VT_INT : Size = 4 bytes. */
#define _nx_64	(*((long *) &instData [64]))	/* VT_INT : Size = 4 bytes. */
#define _sx_28	(*((long *) &instData [28]))	/* VT_NODE : Size = 4 bytes. */
#define _p_20	(*((long *) &instData [20]))	/* VT_NODE : Size = 4 bytes. */
#define _n_12	(*((long *) &instData [12]))	/* VT_NODE : Size = 4 bytes. */


#endif /* DZCAP_VA_INST_STATIC_H */
